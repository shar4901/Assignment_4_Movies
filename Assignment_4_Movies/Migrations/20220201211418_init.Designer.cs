// <auto-generated />
using System;
using Assignment_4_Movies.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Assignment_4_Movies.Migrations
{
    [DbContext(typeof(MovieFormContext))]
    [Migration("20220201211418_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22");

            modelBuilder.Entity("Assignment_4_Movies.Models.Category", b =>
                {
                    b.Property<int>("Category_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category_name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Category_id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Category_id = 1,
                            Category_name = "Comedy"
                        },
                        new
                        {
                            Category_id = 2,
                            Category_name = "Action"
                        },
                        new
                        {
                            Category_id = 3,
                            Category_name = "Romance"
                        });
                });

            modelBuilder.Entity("Assignment_4_Movies.Models.MovieModel", b =>
                {
                    b.Property<int>("Movie_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Category_id")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Category_id1")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Edited")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Lent_to")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT")
                        .HasMaxLength(25);

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Movie_id");

                    b.HasIndex("Category_id1");

                    b.ToTable("Responses");

                    b.HasData(
                        new
                        {
                            Movie_id = 1,
                            Category_id = 1,
                            Director = "Smartest Man",
                            Edited = false,
                            Lent_to = "",
                            Notes = "",
                            Rating = "PG",
                            Title = "Hot Rod",
                            Year = 2000
                        },
                        new
                        {
                            Movie_id = 2,
                            Category_id = 2,
                            Director = "Cute Girl",
                            Edited = true,
                            Lent_to = "",
                            Notes = "",
                            Rating = "G",
                            Title = "13 Going On 30",
                            Year = 2002
                        },
                        new
                        {
                            Movie_id = 3,
                            Category_id = 3,
                            Director = "Russo Brothers",
                            Edited = false,
                            Lent_to = "",
                            Notes = "",
                            Rating = "PG",
                            Title = "SpiderMan No Way Home",
                            Year = 2021
                        });
                });

            modelBuilder.Entity("Assignment_4_Movies.Models.MovieModel", b =>
                {
                    b.HasOne("Assignment_4_Movies.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("Category_id1");
                });
#pragma warning restore 612, 618
        }
    }
}
